<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cajr.mapper.NewsRecommendMapper">
  <resultMap id="BaseResultMap" type="com.cajr.vo.news.NewsRecommend">
    <!--@mbg.generated-->
    <!--@Table news_recommend-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="news_id" jdbcType="INTEGER" property="newsId" />
    <result column="feedback" jdbcType="TINYINT" property="feedback" />
    <result column="suitability" jdbcType="INTEGER" javaType="double" property="suitability"/>
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, news_id, feedback, `status`, created_at, updated_at, suitability
  </sql>

  <select id="checkRecommendByUserIdAndNewsId" resultType="integer">
    select exists (select 1 from news_recommend where user_id = #{userId,jdbcType=INTEGER} and news_id = #{newsId,jdbcType=INTEGER} limit 1)
  </select>

  <select id="findAllByUserIds" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from news_recommend
    where  status = 1
    and user_id in
    <foreach collection="userIds" item="userId" open="(" separator="," close=")">
      #{userId}
    </foreach>
<!--    <choose>-->
<!--      <when test="userIds != null and userIds.size() > 0">-->
<!--        <foreach collection="userIds" item="set" separator="or">-->
<!--          user_id in-->
<!--          <foreach collection="userIds" item="userId" open="(" separator="," close=")">-->
<!--           #{userId}-->
<!--          </foreach>-->
<!--        </foreach>-->
<!--      </when>-->
<!--      <otherwise>-->
<!--        user_id in (null)-->
<!--      </otherwise>-->
<!--    </choose>-->
  </select>

  <select id="findAllByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from news_recommend
    where user_id = #{userId,jdbcType=INTEGER} and status = 1 order by created_at desc
  </select>

  <select id="findAllByFeedback" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from news_recommend
    where feedback = #{feedback,jdbcType=INTEGER} and status = 1
  </select>

  <select id="findAll" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from news_recommend
    where  status = 1
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from news_recommend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from news_recommend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.cajr.vo.news.NewsRecommend" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into news_recommend (user_id, news_id, feedback, 
      `status`, created_at, updated_at, suitability
      )
    values (#{userId,jdbcType=INTEGER}, #{newsId,jdbcType=INTEGER}, #{feedback,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP},#{suitability,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.cajr.vo.news.NewsRecommend" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into news_recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="newsId != null">
        news_id,
      </if>
      <if test="feedback != null">
        feedback,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="suitability >= 0">
        suitability,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="newsId != null">
        #{newsId,jdbcType=INTEGER},
      </if>
      <if test="feedback != null">
        #{feedback,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="suitability >= 0">
        #{suitability,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cajr.vo.news.NewsRecommend">
    <!--@mbg.generated-->
    update news_recommend
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="newsId != null">
        news_id = #{newsId,jdbcType=INTEGER},
      </if>
      <if test="feedback != null">
        feedback = #{feedback,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="suitability >= 0">
        suitability = #{suitability,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cajr.vo.news.NewsRecommend">
    <!--@mbg.generated-->
    update news_recommend
    set user_id = #{userId,jdbcType=INTEGER},
      news_id = #{newsId,jdbcType=INTEGER},
      feedback = #{feedback,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      suitability = #{suitability,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>